!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r(require("angular")):"function"==typeof define&&define.amd?define(["angular"],r):"object"==typeof exports?exports.n17compare=r(require("angular")):e.n17compare=r(e.angular)}(this,function(e){return function(e){function r(n){if(o[n])return o[n].exports;var t=o[n]={exports:{},id:n,loaded:!1};return e[n].call(t.exports,t,t.exports,r),t.loaded=!0,t.exports}var o={};return r.m=e,r.c=o,r.p="",r(0)}([function(e,r,o){"use strict";var n=o(1);n.module("n17-validators",[]);o(2)},function(r,o,n){r.exports=e},function(e,r,o){"use strict";var n=angular.module("n17-validators");n.directive("compareTo",["$parse",o(3)])},function(e,r,o){"use strict";e.exports=function(e){return{require:"?ngModel",restrict:"A",link:function(r,o,n,t){function a(){var e=i(r);return angular.isObject(e)&&e.hasOwnProperty("$viewValue")&&(e=e.$viewValue),e}if(!t)return void(console&&console.warn&&console.warn("Compare Validator requires ngModel to be on the scoped element."));var i=e(n.compareTo),u=e(n.compareToCaseInsensitive);t.$validators.compareTo=function(){var e=a();return u(r)&&angular.isString(e)&&angular.isString(t.$viewValue)?t.$viewValue.toLowerCase()===e.toLowerCase():t.$viewValue===e||""===e},r.$watch(a,function(){t.$$parseAndValidate()})}}}}])});