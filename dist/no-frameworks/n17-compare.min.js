!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r(require("angular")):"function"==typeof define&&define.amd?define(["angular"],r):"object"==typeof exports?exports.n17compare=r(require("angular")):e.n17compare=r(e.angular)}(this,function(e){return function(e){function r(t){if(o[t])return o[t].exports;var n=o[t]={exports:{},id:t,loaded:!1};return e[t].call(n.exports,n,n.exports,r),n.loaded=!0,n.exports}var o={};return r.m=e,r.c=o,r.p="",r(0)}([function(e,r,o){"use strict";var t=o(1);try{t.module("n17-validators")}catch(n){t.module("n17-validators",[])}o(2)},function(r,o){r.exports=e},function(e,r,o){"use strict";var t=angular.module("n17-validators");t.directive("compareTo",["$parse",o(3)])},function(e,r){"use strict";e.exports=function(e){return{require:"?ngModel",restrict:"A",link:function(r,o,t,n){function a(){var e=i(r);return angular.isObject(e)&&e.hasOwnProperty("$viewValue")&&(e=e.$viewValue),e}if(!n)return void(console&&console.warn&&console.warn("Compare Validator requires ngModel to be on the scoped element."));var i=e(t.compareTo),u=e(t.compareToCaseInsensitive);n.$validators.compareTo=function(){var e=a();return u(r)&&angular.isString(e)&&angular.isString(n.$viewValue)?n.$viewValue.toLowerCase()===e.toLowerCase():n.$viewValue===e},r.$watch(a,function(){n.$$parseAndValidate()})}}}}])});